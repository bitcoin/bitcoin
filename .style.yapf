[style]
# --- CORE READABILITY AND LENGTH ---
# Set the column limit to the widely-accepted standard for better horizontal readability.
column_limit=88 

# Use spaces for continuation alignment (standard).
continuation_align_style=SPACE

# Indent width used for line continuations. Standard is 4.
continuation_indent_width=4

# The number of columns to use for indentation. Standard is 4.
indent_width=4

# Join short lines into one line (e.g., single line 'if' statements) for conciseness.
join_multiple_lines=True

# --- BRACKETS AND CONTAINERS (LISTS, DICTS) ---
# Align closing bracket with visual indentation (this is good for readability).
align_closing_bracket_with_visual_indent=True

# Set to True: Put closing brackets on a separate line, dedented, if the expression spans multiple lines.
# This greatly improves readability by clearly marking the end of a block (like Black does).
dedent_closing_brackets=True

# Do not split consecutive brackets, e.g., func({}) becomes func({}) instead of splitting. (Better for short calls).
coalesce_brackets=True

# Split before the closing bracket if a list or dict literal doesn't fit on a single line (Standard).
split_before_closing_bracket=True

# Place each dictionary entry onto its own line (Standard for multi-line dicts).
each_dict_entry_on_separate_line=True

# Allow splits before the dictionary value (Standard, especially when dedent_closing_brackets=True).
allow_split_before_dict_value=True

# Insert a space between the ending comma and closing bracket.
space_between_ending_comma_and_closing_bracket=False # CHANGED to False for better Black/PEP8 look (no space)

# Split arguments if the argument list is terminated by a comma (Good practice for multi-line lists).
split_arguments_when_comma_terminated=True # CHANGED for better multi-line list/call formatting

# --- BLANK LINES AND SPACING ---
# Number of blank lines surrounding top-level function and class definitions (PEP 8 standard).
blank_lines_around_top_level_definition=2

# Insert a blank line before a 'def' or 'class' immediately nested within another 'def' or 'class'.
# Improves visual separation of nested definitions.
blank_line_before_nested_class_or_def=True # CHANGED for better nesting readability

# Use spaces around default or named assigns (PEP 8 standard).
spaces_around_default_or_named_assign=True # CHANGED to True

# The number of spaces required before a trailing comment (PEP 8 standard).
spaces_before_comment=2

# --- OPERATORS AND EXPRESSIONS ---
# Set to True to prefer splitting before 'and' or 'or' rather than after (Standard).
split_before_logical_operator=True

# Set to True to prefer splitting before '&', '|' or '^' rather than after (Standard).
split_before_bitwise_operator=True

# Split before named assignments onto individual lines (Good for clarity).
split_before_named_assigns=True

# --- OPTIONAL: FUNCTIONAL PROGRAMMING ---
# Disallow multiline keys/lambdas (simplifies code and reduces complexity).
allow_multiline_dictionary_keys=False
allow_multiline_lambdas=False
